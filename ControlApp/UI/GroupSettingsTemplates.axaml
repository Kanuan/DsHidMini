<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:devmvvm="clr-namespace:Nefarius.DsHidMini.ControlApp.MVVM"	>
    <!-- Add Resources Here -->

	<!-- LED Group  DataContext="{Binding $parent[Grid].DataContext}" Settings  -->
	<DataTemplate x:Key="Template_LEDsSettings" DataType="{x:Type devmvvm:GroupLEDsCustomsVM}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<!-- LEDs mode selection -->
			<Label
				Content="{Binding Header}"
				Grid.Row="0"
				VerticalAlignment="Center"
				/>
			<ComboBox
				x:Name="LEDModeComboBox"
				VerticalAlignment="Center"
				Grid.Row="0" Grid.Column="1"
				SelectedIndex="0"
				 
					>
				<ComboBoxItem Content="Battery level"/>
				<ComboBoxItem Content="Custom (simple)"/>
				<ComboBoxItem Content="Custom (advanced)"/>
			</ComboBox>

			<TabControl Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" SelectedIndex="{Binding SelectedIndex, ElementName=LEDModeComboBox}">
				<!-- Index 0: LEDs as battery -->
				<TabItem IsVisible="False" >
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Label
						Content="Representation type:"
						Grid.Row="0"
						VerticalAlignment="Center"
						/>
						<!-- Change ComboBox later so it's binding to a enum -->
						<ComboBox
							Grid.Row="1" Grid.Column="1"
						>
							<ComboBoxItem Content="Single LED"/>
							<ComboBoxItem Content="Filling bar"/>
						</ComboBox>
					</Grid>
				</TabItem >
				<!-- Index 1: LEDs custom simple -->
				<TabItem IsVisible="False" VerticalContentAlignment="Center" Width="50">
					<ContentControl MaxWidth="120">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Label Content="1" Grid.Column="0"/>
							<Label Content="2" Grid.Column="1"/>
							<Label Content="3" Grid.Column="2"/>
							<Label Content="4" Grid.Column="3"/>
							<CheckBox Grid.Row="1" Grid.Column="0"/>
							<CheckBox Grid.Row="1" Grid.Column="1"/>
							<CheckBox Grid.Row="1" Grid.Column="2"/>
							<CheckBox Grid.Row="1" Grid.Column="3"/>
						</Grid>
					</ContentControl>
					<!-- Index 2: LEDs custom advanced -->
				</TabItem>
				<TabItem IsVisible="False">
					<StackPanel>
						<!-- Select LED to customize -->
						<TabStrip>
							<TabItem Header="1"/>
							<TabItem Header="2"/>
							<TabItem Header="3"/>
							<TabItem Header="4"/>
						</TabStrip>
						<!-- LED fine tuning -->
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<CheckBox Grid.Row="0" Grid.ColumnSpan="2" Content="Enable LED" />
							<TextBlock
								Grid.Row="1" Grid.Column="0"
								Text="Duration:"
								TextWrapping="Wrap"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"/>
							<NumericUpDown
								Grid.Row="1" Grid.Column="1"
								Minimum="0"
								Maximum="255"
								VerticalAlignment="Center"
								/>
							<TextBlock
								Grid.Row="2" Grid.Column="0"
								Text="Interval duration:"
								TextWrapping="Wrap"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"/>
							<NumericUpDown
								Grid.Row="2" Grid.Column="1"
								Minimum="0"
								Maximum="255"
								VerticalAlignment="Center"
								/>
							<TextBlock
								Grid.Row="3" Grid.Column="0"
								Text="Interval OFF portion:"
								TextWrapping="Wrap"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"/>
							<NumericUpDown
								Grid.Row="3" Grid.Column="1"
								Minimum="0"
								Maximum="255"
								VerticalAlignment="Center"
								/>
							<TextBlock
								Grid.Row="4" Grid.Column="0"
								Text="Interval ON portion:"
								TextWrapping="Wrap"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"/>
							<NumericUpDown
								Grid.Row="4" Grid.Column="1"
								Minimum="0"
								Maximum="255"
								VerticalAlignment="Center"
								/>
						</Grid>
					</StackPanel>
				</TabItem>
			</TabControl>
		</Grid>
	</DataTemplate>

	<!-- Template draft -->
	<DataTemplate x:Key="Template_ToDo">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Label Content="Fill 1" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0"/>
			<Label Content="Fill 2" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0"/>
		</Grid>
	</DataTemplate>

	<!-- Template: sticks deadzone -->
	<DataTemplate x:Key="Template_SticksDeadZone">
		<DockPanel DataContext="{Binding $parent.DataContext}">

			<Grid DockPanel.Dock="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="2*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<!-- Left stick DZ -->
				<TextBlock Text="Left stick DZ:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0"/>
				<Slider
					Grid.Row="0" Grid.Column="1"
					IsSnapToTickEnabled="True"
					TickFrequency="1"
					ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
					ToolTip.Placement="Top"
					Minimum="0"
					Maximum="100"
					/>
				<!-- Right stick DZ -->
				<TextBlock Text="Right Stick DZ:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0"/>
				<Slider
					Grid.Row="1" Grid.Column="1"
					IsSnapToTickEnabled="True"
					TickFrequency="1"
					ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
					ToolTip.Placement="Top"
					Minimum="0"
					Maximum="100"
					/>
			</Grid>
		</DockPanel>




	</DataTemplate>

	<!-- Basic wireless settings -->
	<DataTemplate x:Key="Template_WirelessSettings">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<!-- Idle disconnect -->
			<Label
				Content="Idle disconnect period:"
				Grid.Row="0"
				VerticalAlignment="Center"
				/>
			<Slider
				Grid.Row="0" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="0"
				Maximum="60"
					/>
			<!-- Quick disconnect combo selection -->
			<Label
				Content="Hold for 3s to disconnect:"
				Grid.Row="1"
				VerticalAlignment="Center"
				/>
			<!-- Change ComboBox later so it's binding to a enum -->
			<ComboBox
				Grid.Row="1" Grid.Column="1"
					>
				<ComboBoxItem Content="PS | R1 | L1"/>
				<ComboBoxItem Content="PS | Start"/>
				<ComboBoxItem Content="PS | Select"/>
				<ComboBoxItem Content="Start | R1 | L1"/>
				<ComboBoxItem Content="Start | Select"/>
			</ComboBox>
		</Grid>
	</DataTemplate>

	<!-- Rumble template -->
	<DataTemplate x:Key="Template_RumbleBasicFunctions">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<!-- Variable light rumble emulationg enabler -->
			<CheckBox>
				<TextBlock Text="Use left motor for both heavy and light rumble (variable light rumble emulation)" TextWrapping="Wrap"/>
			</CheckBox>
			<!-- Rumble motors disablers -->
			<CheckBox Grid.Row="1" Content="Disable left motor (heavy)" />
			<CheckBox Grid.Row="2" Content="Disable right motor (small)" />
		</Grid>
	</DataTemplate>

	<!-- Template: rumble heavy strength rescale -->
	<DataTemplate x:Key="Template_RumbleHeavyStrRescale">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="2*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<CheckBox Grid.Row="0" Grid.ColumnSpan="3" Content="Enable rescaling of left rumble strength (heavy)" />
			<!-- Upper range controls-->
			<TextBlock Text="New upper range:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0"/>
			<Slider
				Grid.Row="1" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="2"
				Maximum="255"
					/>
			<!-- lower range controls -->
			<TextBlock Text="New lower range:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2" Grid.Column="0"/>
			<Slider
				Grid.Row="2" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="1"
				Maximum="254"
					/>
		</Grid>
	</DataTemplate>

	<!-- Template: variable light rumble emulation tuning -->
	<DataTemplate x:Key="Template_RumbleVariableLightEmuTuning">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="2*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<!-- Conversion upper range -->
			<TextBlock
				Grid.Row="0" Grid.Column="0"
				Text="Conversion upper range:"
				TextWrapping="Wrap"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
					/>
			<Slider
				Grid.Row="0" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="2"
				Maximum="255"
					/>
			<!-- Conversion lower range -->
			<TextBlock
				Grid.Row="1" Grid.Column="0"
				Text="Conversion lower range:"
				TextWrapping="Wrap"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
					/>
			<Slider
				Grid.Row="1"
				Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="1"
				Maximum="254"
						 />
			<!-- Forced right motor activation / light rumble threshold -->
			<TextBlock
				Grid.Row="2" Grid.Column="0"
				Text="Forced right motor activation (heavy rumble threshold):"
				TextWrapping="Wrap"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
					/>
			<Slider
				Grid.Row="2" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="1"
				Maximum="255"
					/>
			<!-- Forced right motor activation / heavy rumble threshold -->
			<TextBlock
				Grid.Row="3" Grid.Column="0"
				Text="Forced right motor activation (light rumble threshold):"
				TextWrapping="Wrap"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
					/>
			<Slider
				Grid.Row="3" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="1"
				Maximum="255"
					/>
		</Grid>
	</DataTemplate>

	<!-- Template: Output Rate Control -->
	<DataTemplate x:Key="Template_OutputRateControl">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<!-- Output rate enabler -->
			<CheckBox Grid.Row="0" Grid.ColumnSpan="3" Content="Enable output rate control when wireless" />
			<!-- Max output rate adjuster -->
			<TextBlock Text="Max output rate:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0"/>
			<Slider
				Grid.Row="1" Grid.Column="1"
				IsSnapToTickEnabled="True"
				TickFrequency="1"
				ToolTip.Tip="{Binding Value, RelativeSource={RelativeSource Self}}"
				ToolTip.Placement="Top"
				Minimum="1"
				Maximum="255"
					/>
			<!-- Output report detuplicator -->
			<CheckBox Grid.Row="2" Grid.ColumnSpan="3" Content="Enable output report deduplicator"/>
		</Grid>
	</DataTemplate>

</ResourceDictionary>
